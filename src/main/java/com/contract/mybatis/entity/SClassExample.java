package com.contract.mybatis.entity;

import java.math.BigDecimal;
import java.util.ArrayList;
import java.util.List;

public class SClassExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table CLASS
     *
     * @mbggenerated
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table CLASS
     *
     * @mbggenerated
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table CLASS
     *
     * @mbggenerated
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table CLASS
     *
     * @mbggenerated
     */
    public SClassExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table CLASS
     *
     * @mbggenerated
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table CLASS
     *
     * @mbggenerated
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table CLASS
     *
     * @mbggenerated
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table CLASS
     *
     * @mbggenerated
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table CLASS
     *
     * @mbggenerated
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table CLASS
     *
     * @mbggenerated
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table CLASS
     *
     * @mbggenerated
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table CLASS
     *
     * @mbggenerated
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table CLASS
     *
     * @mbggenerated
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table CLASS
     *
     * @mbggenerated
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table CLASS
     *
     * @mbggenerated
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        public Criteria andClassnoIsNull() {
            addCriterion("CLASSNO is null");
            return (Criteria) this;
        }

        public Criteria andClassnoIsNotNull() {
            addCriterion("CLASSNO is not null");
            return (Criteria) this;
        }

        public Criteria andClassnoEqualTo(String value) {
            addCriterion("CLASSNO =", value, "classno");
            return (Criteria) this;
        }

        public Criteria andClassnoNotEqualTo(String value) {
            addCriterion("CLASSNO <>", value, "classno");
            return (Criteria) this;
        }

        public Criteria andClassnoGreaterThan(String value) {
            addCriterion("CLASSNO >", value, "classno");
            return (Criteria) this;
        }

        public Criteria andClassnoGreaterThanOrEqualTo(String value) {
            addCriterion("CLASSNO >=", value, "classno");
            return (Criteria) this;
        }

        public Criteria andClassnoLessThan(String value) {
            addCriterion("CLASSNO <", value, "classno");
            return (Criteria) this;
        }

        public Criteria andClassnoLessThanOrEqualTo(String value) {
            addCriterion("CLASSNO <=", value, "classno");
            return (Criteria) this;
        }

        public Criteria andClassnoLike(String value) {
            addCriterion("CLASSNO like", value, "classno");
            return (Criteria) this;
        }

        public Criteria andClassnoNotLike(String value) {
            addCriterion("CLASSNO not like", value, "classno");
            return (Criteria) this;
        }

        public Criteria andClassnoIn(List<String> values) {
            addCriterion("CLASSNO in", values, "classno");
            return (Criteria) this;
        }

        public Criteria andClassnoNotIn(List<String> values) {
            addCriterion("CLASSNO not in", values, "classno");
            return (Criteria) this;
        }

        public Criteria andClassnoBetween(String value1, String value2) {
            addCriterion("CLASSNO between", value1, value2, "classno");
            return (Criteria) this;
        }

        public Criteria andClassnoNotBetween(String value1, String value2) {
            addCriterion("CLASSNO not between", value1, value2, "classno");
            return (Criteria) this;
        }

        public Criteria andClassnameIsNull() {
            addCriterion("CLASSNAME is null");
            return (Criteria) this;
        }

        public Criteria andClassnameIsNotNull() {
            addCriterion("CLASSNAME is not null");
            return (Criteria) this;
        }

        public Criteria andClassnameEqualTo(String value) {
            addCriterion("CLASSNAME =", value, "classname");
            return (Criteria) this;
        }

        public Criteria andClassnameNotEqualTo(String value) {
            addCriterion("CLASSNAME <>", value, "classname");
            return (Criteria) this;
        }

        public Criteria andClassnameGreaterThan(String value) {
            addCriterion("CLASSNAME >", value, "classname");
            return (Criteria) this;
        }

        public Criteria andClassnameGreaterThanOrEqualTo(String value) {
            addCriterion("CLASSNAME >=", value, "classname");
            return (Criteria) this;
        }

        public Criteria andClassnameLessThan(String value) {
            addCriterion("CLASSNAME <", value, "classname");
            return (Criteria) this;
        }

        public Criteria andClassnameLessThanOrEqualTo(String value) {
            addCriterion("CLASSNAME <=", value, "classname");
            return (Criteria) this;
        }

        public Criteria andClassnameLike(String value) {
            addCriterion("CLASSNAME like", value, "classname");
            return (Criteria) this;
        }

        public Criteria andClassnameNotLike(String value) {
            addCriterion("CLASSNAME not like", value, "classname");
            return (Criteria) this;
        }

        public Criteria andClassnameIn(List<String> values) {
            addCriterion("CLASSNAME in", values, "classname");
            return (Criteria) this;
        }

        public Criteria andClassnameNotIn(List<String> values) {
            addCriterion("CLASSNAME not in", values, "classname");
            return (Criteria) this;
        }

        public Criteria andClassnameBetween(String value1, String value2) {
            addCriterion("CLASSNAME between", value1, value2, "classname");
            return (Criteria) this;
        }

        public Criteria andClassnameNotBetween(String value1, String value2) {
            addCriterion("CLASSNAME not between", value1, value2, "classname");
            return (Criteria) this;
        }

        public Criteria andClassmajorIsNull() {
            addCriterion("CLASSMAJOR is null");
            return (Criteria) this;
        }

        public Criteria andClassmajorIsNotNull() {
            addCriterion("CLASSMAJOR is not null");
            return (Criteria) this;
        }

        public Criteria andClassmajorEqualTo(String value) {
            addCriterion("CLASSMAJOR =", value, "classmajor");
            return (Criteria) this;
        }

        public Criteria andClassmajorNotEqualTo(String value) {
            addCriterion("CLASSMAJOR <>", value, "classmajor");
            return (Criteria) this;
        }

        public Criteria andClassmajorGreaterThan(String value) {
            addCriterion("CLASSMAJOR >", value, "classmajor");
            return (Criteria) this;
        }

        public Criteria andClassmajorGreaterThanOrEqualTo(String value) {
            addCriterion("CLASSMAJOR >=", value, "classmajor");
            return (Criteria) this;
        }

        public Criteria andClassmajorLessThan(String value) {
            addCriterion("CLASSMAJOR <", value, "classmajor");
            return (Criteria) this;
        }

        public Criteria andClassmajorLessThanOrEqualTo(String value) {
            addCriterion("CLASSMAJOR <=", value, "classmajor");
            return (Criteria) this;
        }

        public Criteria andClassmajorLike(String value) {
            addCriterion("CLASSMAJOR like", value, "classmajor");
            return (Criteria) this;
        }

        public Criteria andClassmajorNotLike(String value) {
            addCriterion("CLASSMAJOR not like", value, "classmajor");
            return (Criteria) this;
        }

        public Criteria andClassmajorIn(List<String> values) {
            addCriterion("CLASSMAJOR in", values, "classmajor");
            return (Criteria) this;
        }

        public Criteria andClassmajorNotIn(List<String> values) {
            addCriterion("CLASSMAJOR not in", values, "classmajor");
            return (Criteria) this;
        }

        public Criteria andClassmajorBetween(String value1, String value2) {
            addCriterion("CLASSMAJOR between", value1, value2, "classmajor");
            return (Criteria) this;
        }

        public Criteria andClassmajorNotBetween(String value1, String value2) {
            addCriterion("CLASSMAJOR not between", value1, value2, "classmajor");
            return (Criteria) this;
        }

        public Criteria andClassdeptIsNull() {
            addCriterion("CLASSDEPT is null");
            return (Criteria) this;
        }

        public Criteria andClassdeptIsNotNull() {
            addCriterion("CLASSDEPT is not null");
            return (Criteria) this;
        }

        public Criteria andClassdeptEqualTo(String value) {
            addCriterion("CLASSDEPT =", value, "classdept");
            return (Criteria) this;
        }

        public Criteria andClassdeptNotEqualTo(String value) {
            addCriterion("CLASSDEPT <>", value, "classdept");
            return (Criteria) this;
        }

        public Criteria andClassdeptGreaterThan(String value) {
            addCriterion("CLASSDEPT >", value, "classdept");
            return (Criteria) this;
        }

        public Criteria andClassdeptGreaterThanOrEqualTo(String value) {
            addCriterion("CLASSDEPT >=", value, "classdept");
            return (Criteria) this;
        }

        public Criteria andClassdeptLessThan(String value) {
            addCriterion("CLASSDEPT <", value, "classdept");
            return (Criteria) this;
        }

        public Criteria andClassdeptLessThanOrEqualTo(String value) {
            addCriterion("CLASSDEPT <=", value, "classdept");
            return (Criteria) this;
        }

        public Criteria andClassdeptLike(String value) {
            addCriterion("CLASSDEPT like", value, "classdept");
            return (Criteria) this;
        }

        public Criteria andClassdeptNotLike(String value) {
            addCriterion("CLASSDEPT not like", value, "classdept");
            return (Criteria) this;
        }

        public Criteria andClassdeptIn(List<String> values) {
            addCriterion("CLASSDEPT in", values, "classdept");
            return (Criteria) this;
        }

        public Criteria andClassdeptNotIn(List<String> values) {
            addCriterion("CLASSDEPT not in", values, "classdept");
            return (Criteria) this;
        }

        public Criteria andClassdeptBetween(String value1, String value2) {
            addCriterion("CLASSDEPT between", value1, value2, "classdept");
            return (Criteria) this;
        }

        public Criteria andClassdeptNotBetween(String value1, String value2) {
            addCriterion("CLASSDEPT not between", value1, value2, "classdept");
            return (Criteria) this;
        }

        public Criteria andStudentnumberIsNull() {
            addCriterion("STUDENTNUMBER is null");
            return (Criteria) this;
        }

        public Criteria andStudentnumberIsNotNull() {
            addCriterion("STUDENTNUMBER is not null");
            return (Criteria) this;
        }

        public Criteria andStudentnumberEqualTo(BigDecimal value) {
            addCriterion("STUDENTNUMBER =", value, "studentnumber");
            return (Criteria) this;
        }

        public Criteria andStudentnumberNotEqualTo(BigDecimal value) {
            addCriterion("STUDENTNUMBER <>", value, "studentnumber");
            return (Criteria) this;
        }

        public Criteria andStudentnumberGreaterThan(BigDecimal value) {
            addCriterion("STUDENTNUMBER >", value, "studentnumber");
            return (Criteria) this;
        }

        public Criteria andStudentnumberGreaterThanOrEqualTo(BigDecimal value) {
            addCriterion("STUDENTNUMBER >=", value, "studentnumber");
            return (Criteria) this;
        }

        public Criteria andStudentnumberLessThan(BigDecimal value) {
            addCriterion("STUDENTNUMBER <", value, "studentnumber");
            return (Criteria) this;
        }

        public Criteria andStudentnumberLessThanOrEqualTo(BigDecimal value) {
            addCriterion("STUDENTNUMBER <=", value, "studentnumber");
            return (Criteria) this;
        }

        public Criteria andStudentnumberIn(List<BigDecimal> values) {
            addCriterion("STUDENTNUMBER in", values, "studentnumber");
            return (Criteria) this;
        }

        public Criteria andStudentnumberNotIn(List<BigDecimal> values) {
            addCriterion("STUDENTNUMBER not in", values, "studentnumber");
            return (Criteria) this;
        }

        public Criteria andStudentnumberBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("STUDENTNUMBER between", value1, value2, "studentnumber");
            return (Criteria) this;
        }

        public Criteria andStudentnumberNotBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("STUDENTNUMBER not between", value1, value2, "studentnumber");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table CLASS
     *
     * @mbggenerated do_not_delete_during_merge
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table CLASS
     *
     * @mbggenerated
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }
}